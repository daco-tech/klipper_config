# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
[virtual_sdcard]
path: ~/gcode_files

[display_status] 

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 4 #8
endstop_pin: ^PC2
position_endstop: 0.0
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999


[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 180
max_extrude_cross_section: 1.0

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15

[fan]
pin: PC6

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>



[pause_resume]


[safe_z_home]
home_xy_position: 115,115
speed: 150
z_hop: 15
z_hop_speed: 20

[bed_mesh]
speed: 250
horizontal_move_z: 5
mesh_min: -46,5  # add the x and y offsets for both mesh_min and max. This is set for mine.
mesh_max: 65,180
probe_count: 3,5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0 

[bed_screws]
screw1: 31,37
screw1_name: Front left screw
screw2: 31,208
screw2_name: Rear left screw
screw3: 201,208
screw3_name: Rear right screw
screw4: 201,37
screw4_name: Front right screw

[firmware_retraction]
retract_length: 5 #10
#   The length of filament (in mm) to retract when G10 is activated, and to
#   unretract when G11 is activated (but see unretract_extra_length below).
#   The default is 0 mm.
retract_speed: 10 #40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when unretracting.
unretract_speed: 10 #40
#   The speed of unretraction, in mm/s. The default is 10 mm/s.
#z_hop: 1 #@invalid?
#   The amount of lift applied to the Z axis (in mm) on retract and
#   restored on unretract. The default is 0 
[gcode_arcs]


#[filament_motion_sensor FilamentSensor]
##detection_length: 3
##   The minimum length of filament pulled through the sensor to trigger
##   a state change on the switch_pin
##   Default is 7 mm.
#extruder: extruder
##   The name of the extruder section this sensor is associated with.
##   This parameter must be provided.
#switch_pin: PC6
## changing the switch_pin name according to your motherboard
##pause_on_runout: True
#runout_gcode:
#  M117 Debug: Runout
#insert_gcode:
#  M117 Debug: Insert
##event_delay:
##  M117 Debug: Event Delay
##pause_delay:
##  M117 Debug: Pause Delay

[mcu]
serial: /dev/ttyACM0
#baud: 250000
restart_method: command
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0 #/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#restart_method: command


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1
 G1 X0 Y0 Z5 F4000

 ############################### Start Print and End Print###########
###################################
[gcode_macro START_PRINT]
gcode:0
 G92 E0
 {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
 {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
 # Start bed heating
 M140 S{BED_TEMP}
 # Use absolute coordinates
 xG90
 # Reset the G-Code Z offset (adjust Z offset if needed)
 SET_GCODE_OFFSET Z=0.0
 # Home the printer
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1
 #G1 X0 Y0 Z5 F4000
 # Move the nozzle near the bed
 G1 Z5 F3000
 # Move the nozzle very close to the bed
 #G1 Z0.15 F300
 # Wait for bed to reach temperature
 #M190 S{BED_TEMP}
 # Set and wait for nozzle to reach temperature
 # M109 S{EXTRUDER_TEMP}


[gcode_macro END_PRINT]5
gcode:
 # Turn off bed, extruder, and fan
 M140 S0
 M104 S0
 M106 S0
 # Move nozzle away from print while retracting
 G91
 G28 X Y
 #G1 X-240 Y-225 E-3 F300
 # Raise nozzle by 10mm
 G1 Z10 F3000
 G90
 # Disable steppers
 M84
 M140 S0
 M104 S0
 M106 S0

